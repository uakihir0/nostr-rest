openapi: 3.1.0
info:
  title: NostrRESTGateway
  version: '1.0'
  summary: NostrRESRGateway
  description: Nostr REST API Gateway Server OpenAPISpec
servers:
  - url: 'http://localhost:8080'
    description: Local
paths:
  /v1/users:
    get:
      summary: GET User Profiles
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/UserResponse'
      operationId: get-v1-users
      description: Specify public keysfor a user to obtain user profile.
      parameters:
        - $ref: '#/components/parameters/PubkeyParameter'
    post:
      summary: GET Users Profiles
      operationId: post-v1-users
      responses:
        '200':
          $ref: '#/components/responses/UsersResponse'
      description: |-
        Specify multiple public keys for a user to obtain user profiles.
        (API Endpoint specified in RequestBody. (To avoid URL length limitation))
      requestBody:
        $ref: '#/components/requestBodies/UsersPubKeyRequest'
  /v1/users/following:
    get:
      summary: Get Following Users
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/UsersResponse'
      operationId: get-v1-users-following
      parameters:
        - $ref: '#/components/parameters/PubkeyParameter'
      description: Get users followed by the specified user.
  /v1/users/following/pubkeys:
    get:
      summary: Get Following User's PublicKeys
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/PubKeysResponse'
      operationId: get-v1-users-following-pubkeys
      description: Get user's public keys followed by the specified user.
      parameters:
        - $ref: '#/components/parameters/PubkeyParameter'
    parameters: []
  /v1/users/followers:
    get:
      summary: Get User's Followers
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/UsersResponse'
      operationId: get-v1-users-followers
      parameters:
        - $ref: '#/components/parameters/PubkeyParameter'
      description: Get users following the specified user.
  /v1/users/followers/pubkeys:
    get:
      summary: Get User's Follower's PublicKeys
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/PubKeysResponse'
      operationId: get-v1-users-followers-pubkeys
      description: Get user's public keys following the specified user.
      parameters:
        - $ref: '#/components/parameters/PubkeyParameter'
  /v1/timelines/home:
    get:
      summary: Get Home Timeline
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/UsersTimelineResponse'
      operationId: get-v1-timelines-home
      description: Get posts of users that the specified user follows.
      parameters:
        - $ref: '#/components/parameters/PubkeyParameter'
        - $ref: '#/components/parameters/MaxResultsParameter'
        - $ref: '#/components/parameters/SinceTimeParameter'
        - $ref: '#/components/parameters/UntilTimePatameter'
  /v1/timelines/user:
    get:
      summary: Get User Timeline
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/UsersTimelineResponse'
      operationId: get-v1-timelines-user
      description: Get the posts of the specified user.
      parameters:
        - $ref: '#/components/parameters/PubkeyParameter'
        - $ref: '#/components/parameters/MaxResultsParameter'
        - $ref: '#/components/parameters/SinceTimeParameter'
        - $ref: '#/components/parameters/UntilTimePatameter'
  /v1/posts:
    post:
      summary: Post Comment
      operationId: post-v1-posts
      description: Post comment.
      requestBody:
        $ref: '#/components/requestBodies/PostCommentRequest'
      responses:
        '200':
          description: OK
    parameters: []
components:
  schemas:
    User:
      title: User
      type: object
      examples: []
      properties:
        pubkey:
          type: string
          description: User public key (user idenitifier)
        name:
          type: string
          description: User name
        display_name:
          type: string
          description: User display name
        about:
          type: string
          description: User description
        picture:
          type: string
          description: User icon image url
        banner:
          type: string
          description: User profile banner image url
        website:
          type: string
          description: User website url
      required:
        - pubkey
    Users:
      title: Users
      type: object
      properties:
        list:
          type: array
          description: User list
          items:
            $ref: '#/components/schemas/User'
        count:
          type: integer
          description: Number of list
      required:
        - list
        - count
    Post:
      title: Post
      type: object
      properties:
        id:
          type: string
        content:
          type: string
          description: Raw text of post content.
        user:
          $ref: '#/components/schemas/User'
          description: Author of post.
        created_at:
          type: string
          description: Time post was created (UTC)
      required:
        - id
        - content
        - user
        - created_at
    Posts:
      title: Posts
      type: object
      properties:
        list:
          type: array
          description: Post list
          items:
            $ref: '#/components/schemas/Post'
        count:
          type: integer
          description: Number of list
      required:
        - list
        - count
    Pubkeys:
      title: Pubkeys
      type: array
      description: User's PublicKeys
      items:
        type: string
    Paging:
      title: Paging
      type: object
      properties:
        past_untile_time:
          type: string
          description: Specify when to get past posts from this result
        future_since_time:
          type: string
          description: Specify when to get future posts from this result
      required:
        - past_untile_time
        - future_since_time
    Keys:
      title: Keys
      type: object
      properties:
        public:
          type: string
        secret:
          type: string
      required:
        - public
        - secret
      examples:
        - public: d62f8a6367c9da4a564a9aad30d1fd86afa610c227be01b756774fdab05ea9fc
          secret: 31c6e75c10c8f0a5e7592e25ae60be510eca586d2015be76f298f3c346d50f2c
  requestBodies:
    UsersPubKeyRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              pubkeys:
                type: array
                description: Public key of the user to retrieve
                items:
                  type: string
                  minLength: 1
                  maxLength: 100
            required:
              - pubkeys
          examples:
            Example 1:
              value:
                pubkeys:
                  - 776ea4437354381f14a720be3c476937dce7257ed1073e54a192dbc99f3b7ecc
      description: ''
    PostCommentRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              text:
                type: string
              keys:
                $ref: '#/components/schemas/Keys'
            required:
              - text
              - keys
  responses:
    UserResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
    PubKeysResponse:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              pubkeys:
                $ref: '#/components/schemas/Pubkeys'
              count:
                type: integer
                description: Number of pubkeys
            required:
              - pubkeys
              - count
    UsersTimelineResponse:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              posts:
                $ref: '#/components/schemas/Posts'
                description: Users timeline posts
              pubkeys:
                $ref: '#/components/schemas/Pubkeys'
                description: Users to get posts
              paging:
                $ref: '#/components/schemas/Paging'
                description: Paging
            required:
              - posts
              - pubkeys
    UsersResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Users'
    PostResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Post'
  parameters:
    PubkeyParameter:
      name: pubkey
      in: query
      required: true
      schema:
        type: string
        example: 776ea4437354381f14a720be3c476937dce7257ed1073e54a192dbc99f3b7ecc
      description: Public key of the user
    MaxResultsParameter:
      name: max_results
      in: query
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 200
        default: 20
      description: Specifies the number of Posts to try and retrieve (default 20)
    SinceTimeParameter:
      in: query
      required: false
      schema:
        type: string
      name: since_time
      description: Get posts after that time (include)
    UntilTimePatameter:
      name: until_time
      in: query
      required: false
      schema:
        type: string
      description: Get posts up to that time (exclude)
