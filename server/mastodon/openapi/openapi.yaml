openapi: 3.1.0
info:
  title: MastodonCompatibleAPI
  version: '1.0'
  summary: MastodonCompatibleAPI
  description: Mastodon Compatible API for Nostr.
servers:
  - url: 'http://localhost:8080'
paths:
  /api/v1/accounts/verify_credentials:
    get:
      summary: Verify account credentials
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialAccount'
      operationId: get-api-v1-accounts-verify_credentials
      security:
        - NPubOrNSec: []
      description: Test to make sure that the user token works.
    parameters: []
  '/api/v1/accounts/{uid}':
    parameters:
      - name: uid
        in: path
        required: true
        schema:
          type: string
        description: The ID of the Account in the database.
    get:
      summary: Get account
      tags: []
      operationId: get-api-v1-accounts-uid
      description: View information about a profile.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
  '/api/v1/accounts/{uid}/statuses':
    get:
      summary: Get account’s statuses
      tags: []
      responses: {}
      operationId: get-api-v1-accounts-uid-statuses
      security:
        - NPubOrNSec: []
      description: Statuses posted to the given account.
      parameters:
        - $ref: '#/components/parameters/MaxIdQueryParam'
        - $ref: '#/components/parameters/SinceIdQueryParam'
        - $ref: '#/components/parameters/MinIdQueryParam'
        - $ref: '#/components/parameters/LimitQueryParam'
        - $ref: '#/components/parameters/OnlyMediaQueryParam'
        - $ref: '#/components/parameters/ExcludeRepliesQueryParam'
        - $ref: '#/components/parameters/ExcludeReblogsQueryParam'
        - $ref: '#/components/parameters/PinnedQueryParam'
        - $ref: '#/components/parameters/TaggedQueryParam'
    parameters:
      - name: uid
        in: path
        required: true
        schema:
          type: string
        description: The ID of the Account in the database.
components:
  schemas:
    Account:
      title: Account
      type: object
      examples:
        - id: '23634'
          username: noiob
          acct: noiob@awoo.space
          display_name: ikea shark fan account
          locked: false
          bot: false
          created_at: '2017-02-08T02:00:53.274Z'
          note: '<p>:ms_rainbow_flag:​ :ms_bisexual_flagweb:​ :ms_nonbinary_flag:​ <a href="https://awoo.space/tags/awoo" class="mention hashtag" rel="nofollow noopener noreferrer" target="_blank">#<span>awoo</span}.space <a href="https://awoo.space/tags/admin" class="mention hashtag" rel="nofollow noopener noreferrer" target="_blank">#<span>admin</span} ~ <a href="https://awoo.space/tags/bi" class="mention hashtag" rel="nofollow noopener noreferrer" target="_blank">#<span>bi</span} ~ <a href="https://awoo.space/tags/nonbinary" class="mention hashtag" rel="nofollow noopener noreferrer" target="_blank">#<span>nonbinary</span} ~ compsci student ~ likes video <a href="https://awoo.space/tags/games" class="mention hashtag" rel="nofollow noopener noreferrer" target="_blank">#<span>games</span} and weird/ old electronics and will post obsessively about both ~ avatar by <span class="h-card"><a href="https://weirder.earth/@dzuk" class="u-url mention" rel="nofollow noopener noreferrer" target="_blank">@<span>dzuk</span}</span></p>'
          url: 'https://awoo.space/@noiob'
          avatar: 'https://files.mastodon.social/accounts/avatars/000/023/634/original/6ca8804dc46800ad.png'
          avatar_static: 'https://files.mastodon.social/accounts/avatars/000/023/634/original/6ca8804dc46800ad.png'
          header: 'https://files.mastodon.social/accounts/headers/000/023/634/original/256eb8d7ac40f49a.png'
          header_static: 'https://files.mastodon.social/accounts/headers/000/023/634/original/256eb8d7ac40f49a.png'
          followers_count: 547
          following_count: 404
          statuses_count: 28468
          last_status_at: '2019-11-17T00:02:23.693Z'
          emojis:
            - shortcode: ms_rainbow_flag
              url: 'https://files.mastodon.social/custom_emojis/images/000/028/691/original/6de008d6281f4f59.png'
              static_url: 'https://files.mastodon.social/custom_emojis/images/000/028/691/static/6de008d6281f4f59.png'
              visible_in_picker: true
            - shortcode: ms_bisexual_flag
              url: 'https://files.mastodon.social/custom_emojis/images/000/050/744/original/02f94a5fca7eaf78.png'
              static_url: 'https://files.mastodon.social/custom_emojis/images/000/050/744/static/02f94a5fca7eaf78.png'
              visible_in_picker: true
            - shortcode: ms_nonbinary_flag
              url: 'https://files.mastodon.social/custom_emojis/images/000/105/099/original/8106088bd4782072.png'
              static_url: 'https://files.mastodon.social/custom_emojis/images/000/105/099/static/8106088bd4782072.png'
              visible_in_picker: true
          fields:
            - name: Pronouns
              value: they/them
              verified_at: null
            - name: Alt
              value: '<span class="h-card"><a href="https://cybre.space/@noiob" class="u-url mention" rel="nofollow noopener noreferrer" target="_blank">@<span>noiob</span}</span>'
              verified_at: null
            - name: Bots
              value: '<span class="h-card"><a href="https://botsin.space/@darksouls" class="u-url mention" rel="nofollow noopener noreferrer" target="_blank">@<span>darksouls</span}</span>, <span class="h-card"><a href="https://botsin.space/@nierautomata" class="u-url mention" rel="nofollow noopener noreferrer" target="_blank">@<span>nierautomata</span}</span>, <span class="h-card"><a href="https://mastodon.social/@fedi" class="u-url mention" rel="nofollow noopener noreferrer" target="_blank">@<span>fedi</span}</span>, code for <span class="h-card"><a href="https://botsin.space/@awoobot" class="u-url mention" rel="nofollow noopener noreferrer" target="_blank">@<span>awoobot</span}</span>'
              verified_at: null
            - name: Website
              value: '<a href="http://shork.xyz" rel="nofollow noopener noreferrer" target="_blank"><span class="invisible">http://</span><span class="">shork.xyz</span><span class="invisible"></span}'
              verified_at: '2019-11-10T10:31:10.744+00:00'
      properties:
        id:
          type: string
          description: The account id.
        username:
          type: string
          description: 'The username of the account, not including domain.'
        acct:
          type: string
          description: 'The Webfinger account URI. Equal to username for local users, or username@domain for remote users.'
        url:
          type: string
          description: The location of the user’s profile page.
        display_name:
          type: string
          description: The profile’s display name.
        note:
          type: string
          description: The profile’s bio or description. (HTML)
        avatar:
          type: string
          description: An image icon that is shown next to statuses and in the profile. (URL)
        avatar_static:
          type: string
          description: A static version of the avatar. Equal to avatar if its value is a static image; different if avatar is an animated GIF.
        header:
          type: string
          description: An image banner that is shown above the profile and in profile cards.
        header_static:
          type: string
          description: A static version of the header. Equal to header if its value is a static image; different if header is an animated GIF.
        locked:
          type: boolean
          description: Whether the account manually approves follow requests.
        fields:
          type: array
          description: Custom emoji entities to be used when rendering the profile.
          items:
            $ref: '#/components/schemas/Field'
        emojis:
          type: array
          description: Custom emoji entities to be used when rendering the profile.
          items:
            $ref: '#/components/schemas/CustomEmoji'
        bot:
          type: boolean
          description: 'Indicates that the account may perform automated actions, may not be monitored, or identifies'
        group:
          type: boolean
          description: Indicates that the account represents a Group actor.
        discoverable:
          type: boolean
          nullable: true
          description: Whether the account has opted into discovery features such as the profile directory.
        noindex:
          type: boolean
          nullable: true
          description: Whether the local user has opted out of being indexed by search engines.
        moved:
          description: Indicates that the profile is currently inactive and that its user has moved to a new account.
          type: boolean
          nullable: true
        suspended:
          type: boolean
          description: An extra attribute returned only when an account is suspended.
        limited:
          type: boolean
          description: 'An extra attribute returned only when an account is silenced. If true, indicates that the account should be hidden behind a warning screen.'
        created_at:
          type: string
          description: When the account was created. (ISO 8601)
        last_status_at:
          type: string
          nullable: true
          description: When the most recent status was posted. (ISO 8601)
        statuses_count:
          type: integer
          description: How many statuses are attached to this account.
        followers_count:
          type: integer
          description: The reported followers of this profile.
        following_count:
          type: integer
          description: The reported follows of this profile.
      required:
        - id
        - username
        - acct
        - url
        - display_name
        - note
        - avatar
        - avatar_static
        - header
        - header_static
        - locked
        - fields
        - emojis
        - bot
        - group
        - discoverable
        - created_at
        - last_status_at
        - statuses_count
        - followers_count
        - following_count
    CredentialAccount:
      allOf:
        - $ref: '#/components/schemas/Account'
        - type: object
          properties:
            role:
              $ref: '#/components/schemas/Role'
              description: The role assigned to the currently authorized user.
            source:
              $ref: '#/components/schemas/Source'
              description: An extra attribute that contains source values to be used with API methods that verify credentials and update credentials.
          required:
            - role
            - source
      examples:
        - id: '23634'
          username: noiob
          acct: noiob@awoo.space
          display_name: ikea shark fan account
          locked: false
          bot: false
          created_at: '2017-02-08T02:00:53.274Z'
          note: '<p>:ms_rainbow_flag:​ :ms_bisexual_flagweb:​ :ms_nonbinary_flag:​ <a href="https://awoo.space/tags/awoo" class="mention hashtag" rel="nofollow noopener noreferrer" target="_blank">#<span>awoo</span}.space <a href="https://awoo.space/tags/admin" class="mention hashtag" rel="nofollow noopener noreferrer" target="_blank">#<span>admin</span} ~ <a href="https://awoo.space/tags/bi" class="mention hashtag" rel="nofollow noopener noreferrer" target="_blank">#<span>bi</span} ~ <a href="https://awoo.space/tags/nonbinary" class="mention hashtag" rel="nofollow noopener noreferrer" target="_blank">#<span>nonbinary</span} ~ compsci student ~ likes video <a href="https://awoo.space/tags/games" class="mention hashtag" rel="nofollow noopener noreferrer" target="_blank">#<span>games</span} and weird/ old electronics and will post obsessively about both ~ avatar by <span class="h-card"><a href="https://weirder.earth/@dzuk" class="u-url mention" rel="nofollow noopener noreferrer" target="_blank">@<span>dzuk</span}</span></p>'
          url: 'https://awoo.space/@noiob'
          avatar: 'https://files.mastodon.social/accounts/avatars/000/023/634/original/6ca8804dc46800ad.png'
          avatar_static: 'https://files.mastodon.social/accounts/avatars/000/023/634/original/6ca8804dc46800ad.png'
          header: 'https://files.mastodon.social/accounts/headers/000/023/634/original/256eb8d7ac40f49a.png'
          header_static: 'https://files.mastodon.social/accounts/headers/000/023/634/original/256eb8d7ac40f49a.png'
          followers_count: 547
          following_count: 404
          statuses_count: 28468
          last_status_at: '2019-11-17T00:02:23.693Z'
          emojis:
            - shortcode: ms_rainbow_flag
              url: 'https://files.mastodon.social/custom_emojis/images/000/028/691/original/6de008d6281f4f59.png'
              static_url: 'https://files.mastodon.social/custom_emojis/images/000/028/691/static/6de008d6281f4f59.png'
              visible_in_picker: true
            - shortcode: ms_bisexual_flag
              url: 'https://files.mastodon.social/custom_emojis/images/000/050/744/original/02f94a5fca7eaf78.png'
              static_url: 'https://files.mastodon.social/custom_emojis/images/000/050/744/static/02f94a5fca7eaf78.png'
              visible_in_picker: true
            - shortcode: ms_nonbinary_flag
              url: 'https://files.mastodon.social/custom_emojis/images/000/105/099/original/8106088bd4782072.png'
              static_url: 'https://files.mastodon.social/custom_emojis/images/000/105/099/static/8106088bd4782072.png'
              visible_in_picker: true
          fields:
            - name: Pronouns
              value: they/them
              verified_at: null
            - name: Alt
              value: '<span class="h-card"><a href="https://cybre.space/@noiob" class="u-url mention" rel="nofollow noopener noreferrer" target="_blank">@<span>noiob</span}</span>'
              verified_at: null
            - name: Bots
              value: '<span class="h-card"><a href="https://botsin.space/@darksouls" class="u-url mention" rel="nofollow noopener noreferrer" target="_blank">@<span>darksouls</span}</span>, <span class="h-card"><a href="https://botsin.space/@nierautomata" class="u-url mention" rel="nofollow noopener noreferrer" target="_blank">@<span>nierautomata</span}</span>, <span class="h-card"><a href="https://mastodon.social/@fedi" class="u-url mention" rel="nofollow noopener noreferrer" target="_blank">@<span>fedi</span}</span>, code for <span class="h-card"><a href="https://botsin.space/@awoobot" class="u-url mention" rel="nofollow noopener noreferrer" target="_blank">@<span>awoobot</span}</span>'
              verified_at: null
            - name: Website
              value: '<a href="http://shork.xyz" rel="nofollow noopener noreferrer" target="_blank"><span class="invisible">http://</span><span class="">shork.xyz</span><span class="invisible"></span}'
              verified_at: '2019-11-10T10:31:10.744+00:00'
          role:
            id: 0
            name: string
            color: string
            permissions: 0
            highlighted: true
          source:
            note: string
            fields:
              - name: Website
                value: 'https://trwnh.com'
                verified_at: '2019-08-29T04:14:55.571+00:00'
            privacy: public
            sensitive: true
            language: string
            follow_requests_count: 0
    Status:
      type: object
      properties:
        id:
          type: string
          description: ID of the status in the database.
        created_at:
          type: string
          description: The date when this status was created.
        edited_at:
          type: string
          nullable: true
          description: Timestamp of when the status was last edited.
        in_reply_to_id:
          type: string
          nullable: true
          description: ID of the status being replied to.
        in_reply_to_account_id:
          type: string
          nullable: true
          description: ID of the account that authored the status being replied to.
        sensitive:
          type: boolean
          description: Is this status marked as sensitive content?
        spoiler_text:
          type: string
          description: 'Subject or summary line, below which status content is collapsed until expanded.'
        visibility:
          type: string
          description: Visibility of this status.
          enum:
            - public
            - unlisted
            - private
            - direct
        language:
          type: string
          nullable: true
          description: Primary language of this status.
        uri:
          type: string
          description: URI of the status used for federation.
        url:
          type: string
          nullable: true
          description: A link to the status’s HTML representation.
        replies_count:
          type: integer
          description: How many replies this status has received.
        reblogs_count:
          type: integer
          description: How many boosts this status has received.
        favourites_count:
          type: integer
          description: How many favourites this status has received.
        favourited:
          type: boolean
          description: 'If the current token has an authorized user: Have you favourited this status?'
        reblogged:
          type: boolean
          description: 'If the current token has an authorized user: Have you boosted this status?'
        muted:
          type: boolean
          description: 'If the current token has an authorized user: Have you muted notifications for this status’s conversation?'
        bookmarked:
          type: boolean
          description: 'If the current token has an authorized user: Have you bookmarked this status?'
        pinned:
          type: boolean
          description: 'If the current token has an authorized user: Have you pinned this status? Only appears if the status is pinnable.'
        content:
          type: string
          description: HTML-encoded status content.
        text:
          type: string
          nullable: true
          description: 'Plain-text source of a status. Returned instead of content when status is deleted, so the user may redraft from the source text without the client having to reverse-engineer the original text from the HTML content.'
        reblog:
          description: The status being reblogged.
          type: object
        application:
          $ref: '#/components/schemas/Application'
          description: The application used to post this status.
        account:
          $ref: '#/components/schemas/Account'
          description: The account that authored this status.
        media_attachments:
          type: array
          description: Media that is attached to this status.
          items:
            $ref: '#/components/schemas/MediaAttachment'
        mentions:
          type: array
          description: Mentions of users within the status content.
          items:
            $ref: '#/components/schemas/StatusMention'
        tags:
          type: array
          description: Hashtags used within the status content.
          items:
            $ref: '#/components/schemas/StatusTag'
        emojis:
          type: array
          description: Custom emoji to be used when rendering status content.
          items:
            $ref: '#/components/schemas/CustomEmoji'
        card:
          $ref: '#/components/schemas/PreviewCard'
        poll:
          $ref: '#/components/schemas/Poll'
          description: The poll attached to the status.
        filtered:
          type: array
          description: 'If the current token has an authorized user: The filter and keywords that matched this status.'
          items:
            $ref: '#/components/schemas/FilterResult'
      required:
        - id
        - created_at
        - edited_at
        - in_reply_to_id
        - in_reply_to_account_id
        - sensitive
        - spoiler_text
        - visibility
        - language
        - uri
        - url
        - replies_count
        - reblogs_count
        - favourites_count
        - content
        - text
        - reblog
        - account
        - media_attachments
        - mentions
        - tags
        - emojis
        - card
        - poll
      description: Represents a status posted by an account.
      examples:
        - id: '103270115826048975'
          created_at: '2019-12-08T03:48:33.901Z'
          in_reply_to_id: null
          in_reply_to_account_id: null
          sensitive: false
          spoiler_text: ''
          visibility: public
          language: en
          uri: 'https://mastodon.social/users/Gargron/statuses/103270115826048975'
          url: 'https://mastodon.social/@Gargron/103270115826048975'
          replies_count: 5
          reblogs_count: 6
          favourites_count: 11
          favourited: false
          reblogged: false
          muted: false
          bookmarked: false
          content: '<p>&quot;I lost my inheritance with one wrong digit on my sort code&quot;</p><p><a href="https://www.theguardian.com/money/2019/dec/07/i-lost-my-193000-inheritance-with-one-wrong-digit-on-my-sort-code" rel="nofollow noopener noreferrer" target="_blank"><span class="invisible">https://www.</span><span class="ellipsis">theguardian.com/money/2019/dec</span><span class="invisible">/07/i-lost-my-193000-inheritance-with-one-wrong-digit-on-my-sort-code</span}</p>'
          reblog: null
          application:
            name: Web
            website: null
          account:
            id: '1'
            username: Gargron
            acct: Gargron
            display_name: Eugen
            locked: false
            bot: false
            discoverable: true
            group: false
            created_at: '2016-03-16T14:34:26.392Z'
            note: '<p>Developer of Mastodon and administrator of mastodon.social. I post service announcements, development updates, and personal stuff.</p>'
            url: 'https://mastodon.social/@Gargron'
            avatar: 'https://files.mastodon.social/accounts/avatars/000/000/001/original/d96d39a0abb45b92.jpg'
            avatar_static: 'https://files.mastodon.social/accounts/avatars/000/000/001/original/d96d39a0abb45b92.jpg'
            header: 'https://files.mastodon.social/accounts/headers/000/000/001/original/c91b871f294ea63e.png'
            header_static: 'https://files.mastodon.social/accounts/headers/000/000/001/original/c91b871f294ea63e.png'
            followers_count: 322930
            following_count: 459
            statuses_count: 61323
            last_status_at: '2019-12-10T08:14:44.811Z'
            emojis: []
            fields:
              - name: Patreon
                value: '<a href="https://www.patreon.com/mastodon" rel="me nofollow noopener noreferrer" target="_blank"><span class="invisible">https://www.</span><span class="">patreon.com/mastodon</span><span class="invisible"></span}'
                verified_at: null
              - name: Homepage
                value: '<a href="https://zeonfederated.com" rel="me nofollow noopener noreferrer" target="_blank"><span class="invisible">https://</span><span class="">zeonfederated.com</span><span class="invisible"></span}'
                verified_at: '2019-07-15T18:29:57.191+00:00'
          media_attachments: []
          mentions: []
          tags: []
          emojis: []
          card:
            url: 'https://www.theguardian.com/money/2019/dec/07/i-lost-my-193000-inheritance-with-one-wrong-digit-on-my-sort-code'
            title: '‘I lost my £193,000 inheritance – with one wrong digit on my sort code’'
            description: 'When Peter Teich’s money went to another Barclays customer, the bank offered £25 as a token gesture'
            type: link
            author_name: ''
            author_url: ''
            provider_name: ''
            provider_url: ''
            html: ''
            width: 0
            height: 0
            image: null
            embed_url: ''
          poll: null
    StatusMention:
      title: StatusMention
      type: object
      properties:
        id:
          type: string
          description: The account ID of the mentioned user.
        username:
          type: string
          description: The username of the mentioned user.
        url:
          type: string
          description: The location of the mentioned user’s profile.
        acct:
          type: string
          description: 'The webfinger acct: URI of the mentioned user. Equivalent to username for local users, or username@domain for remote users.'
      required:
        - id
        - username
        - url
        - acct
    StatusTag:
      title: StatusTag
      type: object
      properties:
        name:
          type: string
          description: 'The value of the hashtag after the # sign.'
        url:
          type: string
          description: A link to the hashtag on the instance.
      required:
        - name
        - url
    Field:
      type: object
      properties:
        name:
          type: string
          description: The key of a given field’s key-value pair.
        value:
          type: string
          description: The value associated with the name key.
        verified_at:
          type: string
          nullable: true
          description: Timestamp of when the server verified a URL value for a rel=“me” link.
      required:
        - name
        - value
        - verified_at
      examples:
        - name: Website
          value: 'https://trwnh.com'
          verified_at: '2019-08-29T04:14:55.571+00:00'
    CustomEmoji:
      type: object
      properties:
        shortcode:
          type: string
          description: The name of the custom emoji.
        url:
          type: string
          description: A link to the custom emoji.
        static_url:
          type: string
          description: A link to a static copy of the custom emoji.
        visible_in_picker:
          type: boolean
          description: Whether this Emoji should be visible in the picker or unlisted.
        category:
          type: string
          description: Used for sorting custom emoji in the picker.
      required:
        - shortcode
        - url
        - static_url
        - visible_in_picker
        - category
      examples:
        - shortcode: blobaww
          url: 'https://files.mastodon.social/custom_emojis/images/000/011/739/original/blobaww.png'
          static_url: 'https://files.mastodon.social/custom_emojis/images/000/011/739/static/blobaww.png'
          visible_in_picker: true
          category: Blobs
    Source:
      title: Source
      type: object
      properties:
        note:
          type: string
          description: 'Profile bio, in plain-text instead of in HTML.'
        fields:
          type: array
          description: Metadata about the account.
          items:
            $ref: '#/components/schemas/Field'
        privacy:
          type: string
          enum:
            - public
            - unlisted
            - private
            - direct
          description: The default post privacy to be used for new statuses.
        sensitive:
          type: boolean
          description: Whether new statuses should be marked sensitive by default.
        language:
          type: string
          description: The default posting language for new statuses. (ISO 639-1 language two-letter code) or empty string.
        follow_requests_count:
          type: integer
          description: The number of pending follow requests.
      required:
        - note
        - fields
        - privacy
        - sensitive
        - language
        - follow_requests_count
    Role:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the Role in the database.
        name:
          type: string
          description: The name of the role.
        color:
          type: string
          description: 'The hex code assigned to this role. If no hex code is assigned, the string will be empty.'
        permissions:
          type: integer
          description: A bitmask that represents the sum of all permissions granted to the role.
        highlighted:
          type: boolean
          description: ' Whether the role is publicly visible as a badge on user profiles.'
      required:
        - id
        - name
        - color
        - permissions
        - highlighted
      examples:
        - id: 3
          name: Owner
          color: '#ff3838'
          permissions: 1048575
          highlighted: true
    Application:
      type: object
      properties:
        name:
          type: string
          nullable: true
        website:
          type: string
          nullable: true
      examples:
        - name: Web
          website: null
    MediaAttachment:
      type: object
      properties:
        id:
          type: string
          description: The ID of the attachment in the database.
        type:
          type: string
          description: The type of the attachment.
          enum:
            - unknown
            - image
            - gifv
            - video
            - audio
        url:
          type: string
          description: The location of the original full-size attachment.
        preview_url:
          type: string
          description: The location of a scaled-down preview of the attachment.
        remote_url:
          type: string
          nullable: true
          description: The location of the full-size original attachment on the remote website.
        meta:
          $ref: '#/components/schemas/MediaImegeMeta'
          description: Metadata returned by Paperclip.
        description:
          type: string
          description: 'Alternate text that describes what is in the media attachment, to be used for the visually impaired or when media attachments do not load.'
        blurhash:
          type: string
          description: 'A hash computed by the BlurHash algorithm, for generating colorful preview thumbnails when media has not been downloaded yet.'
      required:
        - id
        - type
        - url
        - preview_url
        - remote_url
        - meta
        - description
        - blurhash
      examples:
        - id: '22345792'
          type: image
          url: 'https://files.mastodon.social/media_attachments/files/022/345/792/original/57859aede991da25.jpeg'
          preview_url: 'https://files.mastodon.social/media_attachments/files/022/345/792/small/57859aede991da25.jpeg'
          remote_url: null
          text_url: 'https://mastodon.social/media/2N4uvkuUtPVrkZGysms'
          meta:
            original:
              width: 640
              height: 480
              size: 640x480
              aspect: 1.3333333333333333
            small:
              width: 461
              height: 346
              size: 461x346
              aspect: 1.3323699421965318
            focus:
              x: -0.27
              'y': 0.51
          description: test media description
          blurhash: 'UFBWY:8_0Jxv4mx]t8t64.%M-:IUWGWAt6M}'
    MediaImageSize:
      type: object
      properties:
        width:
          type: integer
        height:
          type: integer
        size:
          type: string
        aspect:
          type: number
      title: ''
      examples:
        - width: 640
          height: 480
          size: 640x480
          aspect: 1.3333333333333333
    MediaImegeMeta:
      type: object
      properties:
        original:
          $ref: '#/components/schemas/MediaImageSize'
        small:
          $ref: '#/components/schemas/MediaImageSize'
        focus:
          $ref: '#/components/schemas/MediaImageForcus'
      examples:
        - original:
            width: 640
            height: 480
            size: 640x480
            aspect: 1.3333333333333333
          small:
            width: 461
            height: 346
            size: 461x346
            aspect: 1.3323699421965318
          focus:
            x: -0.27
            'y': 0.51
    MediaImageForcus:
      type: object
      properties:
        x:
          type: number
        'y':
          type: number
      title: ''
      examples:
        - x: -0.27
          'y': 0.51
    Poll:
      type: object
      description: Represents a poll attached to a status.
      examples:
        - id: '34830'
          expires_at: '2019-12-05T04:05:08.302Z'
          expired: true
          multiple: false
          votes_count: 10
          voters_count: null
          voted: true
          own_votes:
            - 1
          options:
            - title: accept
              votes_count: 6
            - title: deny
              votes_count: 4
          emojis: []
      properties:
        id:
          type: string
          description: The ID of the poll in the database.
        expires_at:
          type: string
          nullable: true
          description: When the poll ends.
        expired:
          type: boolean
          description: Is the poll currently expired?
        multiple:
          type: boolean
          description: Does the poll allow multiple-choice answers?
        votes_count:
          type: integer
          description: How many votes have been received.
        voters_count:
          type: integer
          nullable: true
          description: How many unique accounts have voted on a multiple-choice poll.
        voted:
          type: boolean
          description: 'When called with a user token, has the authorized user voted?'
        own_votes:
          type: array
          description: 'When called with a user token, which options has the authorized user chosen? Contains an array of index values for options.'
          items:
            type: integer
        options:
          type: array
          description: Possible answers for the poll.
          items:
            $ref: '#/components/schemas/PollOption'
        emojis:
          type: array
          description: Custom emoji to be used for rendering poll options.
          items:
            $ref: '#/components/schemas/CustomEmoji'
      required:
        - id
        - expires_at
        - expired
        - multiple
        - votes_count
        - voters_count
        - options
        - emojis
    PollOption:
      type: object
      properties:
        title:
          type: string
          description: The text value of the poll option.
        votes_count:
          type: integer
          nullable: true
          description: The total number of received votes for this option.
      required:
        - title
        - votes_count
      examples:
        - title: accept
          votes_count: 6
    PreviewCard:
      type: object
      properties:
        url:
          type: string
          description: Location of linked resource.
        title:
          type: string
          description: Title of linked resource.
        description:
          type: string
          description: Description of preview.
        type:
          type: string
          description: The type of the preview card.
          enum:
            - link
            - photo
            - video
            - rich
        author_name:
          type: string
          description: The author of the original resource.
        author_url:
          type: string
          description: A link to the author of the original resource.
        provider_name:
          type: string
          description: The provider of the original resource.
        provider_url:
          type: string
          description: A link to the provider of the original resource.
        html:
          type: string
          description: HTML to be used for generating the preview card.
        width:
          type: integer
          description: 'Width of preview, in pixels.'
        height:
          type: integer
          description: 'Height of preview, in pixels.'
        image:
          type: string
          nullable: true
          description: Preview thumbnail.
        embed_url:
          type: string
          description: 'Used for photo embeds, instead of custom html.'
        blurhash:
          type: string
          nullable: true
          description: 'A hash computed by the BlurHash algorithm, for generating colorful preview thumbnails when media has not been downloaded yet.'
      required:
        - url
        - title
        - description
        - type
        - author_name
        - author_url
        - provider_name
        - provider_url
        - html
        - width
        - height
        - image
        - embed_url
        - blurhash
      description: Represents a rich preview card that is generated using OpenGraph tags from a URL.
      examples:
        - url: 'https://www.theguardian.com/money/2019/dec/07/i-lost-my-193000-inheritance-with-one-wrong-digit-on-my-sort-code'
          title: '‘I lost my £193,000 inheritance – with one wrong digit on my sort code’'
          description: 'When Peter Teich’s money went to another Barclays customer, the bank offered £25 as a token gesture'
          type: link
          author_name: ''
          author_url: ''
          provider_name: ''
          provider_url: ''
          html: ''
          width: 0
          height: 0
          image: null
          embed_url: ''
          blurhash: null
    Filter:
      type: object
      properties:
        id:
          type: string
          description: The ID of the Filter in the database.
        title:
          type: string
          description: A title given by the user to name the filter.
        context:
          type: array
          description: The contexts in which the filter should be applied.
          items:
            type: string
            enum:
              - home
              - notifications
              - public
              - thread
              - account
        expires_at:
          type: string
          nullable: true
          description: When the filter should no longer be applied.
        filter_action:
          type: string
          description: The action to be taken when a status matches this filter.
          enum:
            - warn
            - hide
        keywords:
          type: array
          description: The keywords grouped under this filter.
          items:
            $ref: '#/components/schemas/FilterKeyword'
        statuses:
          type: array
          description: The statuses grouped under this filter.
          items:
            $ref: '#/components/schemas/FilterStatus'
      required:
        - id
        - title
        - context
        - expires_at
        - filter_action
        - keywords
        - statuses
      examples:
        - id: '19972'
          title: Test filter
          context:
            - home
          expires_at: '2022-09-20T17:27:39.296Z'
          filter_action: warn
          keywords:
            - id: '1197'
              keyword: bad word
              whole_word: false
          statuses:
            - id: '1'
              status_id: '109031743575371913'
      description: Represents a user-defined filter for determining which statuses should not be shown to the user.
    FilterStatus:
      type: object
      description: 'Represents a status ID that, if matched, should cause the filter action to be taken.'
      properties:
        id:
          type: string
          description: The ID of the FilterStatus in the database.
        status_id:
          type: string
          description: The ID of the Status that will be filtered.
      required:
        - id
        - status_id
      examples:
        - id: '1'
          status_id: '109031743575371913'
    FilterKeyword:
      type: object
      description: 'Represents a keyword that, if matched, should cause the filter action to be taken.'
      properties:
        id:
          type: string
          description: The ID of the FilterKeyword in the database.
        keyword:
          type: string
          description: The phrase to be matched against.
        whole_word:
          type: boolean
          description: Should the filter consider word boundaries? See implementation guidelines for filters.
      required:
        - id
        - keyword
        - whole_word
      examples:
        - id: '1197'
          keyword: bad word
          whole_word: false
    FilterResult:
      type: object
      properties:
        filter:
          $ref: '#/components/schemas/Filter'
          description: The filter that was matched.
        keyword_matches:
          type: array
          nullable: true
          description: The keyword within the filter that was matched.
          items:
            type: string
        status_matches:
          type: array
          nullable: true
          description: The status ID within the filter that was matched.
          items:
            type: string
      required:
        - filter
        - keyword_matches
        - status_matches
      description: Represents a filter whose keywords matched a given status.
      examples:
        - filter:
            id: '3'
            title: Hide completely
            context:
              - home
            expires_at: '2022-09-20T17:27:39.296Z'
            filter_action: hide
          keyword_matches:
            - bad word
          status_matches:
            - '109031743575371913'
  securitySchemes:
    NPubOrNSec:
      type: http
      scheme: bearer
  parameters:
    UserIdPathParam:
      name: uid
      in: path
      required: true
      schema:
        type: string
      description: The ID of the Account in the database.
    MaxIdQueryParam:
      name: max_id
      in: query
      required: false
      schema:
        type: string
      description: Return results older than this ID
    SinceIdQueryParam:
      name: since_id
      in: query
      required: false
      schema:
        type: string
      description: Return results newer than this ID
    MinIdQueryParam:
      name: min_id
      in: query
      required: false
      schema:
        type: string
      description: Return results immediately newer than this ID
    LimitQueryParam:
      name: limit
      in: query
      required: false
      schema:
        type: integer
      description: Maximum number of results to return. Defaults to 20 statuses. Max 40 statuses.
    OnlyMediaQueryParam:
      name: only_media
      in: query
      required: false
      schema:
        type: boolean
      description: Filter out statuses without attachments.
    ExcludeRepliesQueryParam:
      name: exclude_replies
      in: query
      required: false
      schema:
        type: boolean
      description: Filter out statuses in reply to a different account.
    ExcludeReblogsQueryParam:
      name: exclude_reblogs
      in: query
      required: false
      schema:
        type: boolean
      description: Filter out boosts from the response.
    PinnedQueryParam:
      name: pinned
      in: query
      required: false
      schema:
        type: boolean
      description: Filter for pinned statuses only.
    TaggedQueryParam:
      name: tagged
      in: query
      required: false
      schema:
        type: string
      description: Filter for statuses using a specific hashtag.
